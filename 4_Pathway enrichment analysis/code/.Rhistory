t='moca'
result_df=c()
for (t in c("updrs1","updrs2",'updrs3',"updrs4","schwab","ess",'moca')){
print(t)
df=cbind(pval_pdbp[,t],pval_ppmi[,t],beta_ppmi[,t],beta_pdbp[,t])
colnames(df)=c('pval_pdbp','pval_ppmi','beta_ppmi','beta_pdbp')
df=as.data.frame(df)
rownames(df)=rownames(pval_pdbp)
df_clean <- df[!is.na(df$beta_ppmi) & !is.na(df$beta_pdbp), ]
c1=cor(df$beta_ppmi, df$beta_pdbp, use = "complete.obs", method = "pearson")
c2=cor(df_clean$beta_ppmi, df_clean$beta_pdbp, method = "spearman")
print(paste('Corr Pearson beta:',c1))
print(paste('Corr spearman beta:',c2))
a=df_clean[df_clean$pval_ppmi<0.1,]#when p sig
a$sign_match <- sign(a$beta_ppmi) == sign(a$beta_pdbp)
b=table(a$sign_match)
c3=b[2]/(b[1]+b[2])
print(paste('When p sig, beta with same sign:',c3))
result_df=rbind(result_df,c(c1,c2,c3))
}
result_df=as.data.frame(result_df)
rownames(result_df)=c("updrs1","updrs2","updrs4","schwab","ess",'moca','updrs3')
result_df
result_df=c()
pval_cutoff=c(0.005,0.05,0.01,0.1)
for (t in c("updrs1","updrs2",'updrs3',"updrs4","schwab","ess",'moca')){
#print(t)
df=cbind(pval_pdbp[,t],pval_ppmi[,t],beta_ppmi[,t],beta_pdbp[,t])
colnames(df)=c('pval_pdbp','pval_ppmi','beta_ppmi','beta_pdbp')
df=as.data.frame(df)
rownames(df)=rownames(pval_pdbp)
df_clean <- df[!is.na(df$beta_ppmi) & !is.na(df$beta_pdbp), ]
c1=cor(df$beta_ppmi, df$beta_pdbp, use = "complete.obs", method = "pearson")
c2=cor(df_clean$beta_ppmi, df_clean$beta_pdbp, method = "spearman")
#print(paste('Corr Pearson beta:',c1))
#print(paste('Corr spearman beta:',c2))
c3=c()
for (pcut in pval_cutoff){
a=df_clean[df_clean$pval_ppmi<pcut,]#when p sig
a$sign_match <- sign(a$beta_ppmi) == sign(a$beta_pdbp)
b=table(a$sign_match)
c4=b[2]/(b[1]+b[2])
c3=c(c3,c4)
#print(paste('When p sig, beta with same sign:',c3))
}
result_df=rbind(result_df,c(c1,c2,c3))
}
result_df=as.data.frame(result_df)
rownames(result_df)=c("updrs1","updrs2","updrs4","schwab","ess",'moca','updrs3')
result_df
############# PDBP #############
pval_pdbp=read.csv('~/Desktop/manuscript related/PDBP_validation/snp/lmm_result_earlyPD_u3all/PD_combined/linear_pval_mt_combined_all.csv',row.names = 1)
beta_pdbp=read.csv('~/Desktop/manuscript related/PDBP_validation/snp/lmm_result_earlyPD_u3all/PD_combined/linear_beta_mt_combined_all.csv',row.names = 1)
############# compare #############
common_SNPs_pval=intersect(rownames(pval_ppmi),rownames(pval_pdbp))
common_SNPs_beta=intersect(rownames(beta_ppmi),rownames(beta_pdbp))
pval_pdbp=pval_pdbp[common_SNPs_pval,]
pval_ppmi=pval_ppmi[common_SNPs_pval,]
beta_ppmi=beta_ppmi[common_SNPs_beta,]
beta_pdbp=beta_pdbp[common_SNPs_beta,]
############# calculate correlation, proportion... #############
t='moca'
result_df=c()
pval_cutoff=c(0.005,0.05,0.01,0.1)
for (t in c("updrs1","updrs2",'updrs3',"updrs4","schwab","ess",'moca')){
#print(t)
df=cbind(pval_pdbp[,t],pval_ppmi[,t],beta_ppmi[,t],beta_pdbp[,t])
colnames(df)=c('pval_pdbp','pval_ppmi','beta_ppmi','beta_pdbp')
df=as.data.frame(df)
rownames(df)=rownames(pval_pdbp)
df_clean <- df[!is.na(df$beta_ppmi) & !is.na(df$beta_pdbp), ]
c1=cor(df$beta_ppmi, df$beta_pdbp, use = "complete.obs", method = "pearson")
c2=cor(df_clean$beta_ppmi, df_clean$beta_pdbp, method = "spearman")
#print(paste('Corr Pearson beta:',c1))
#print(paste('Corr spearman beta:',c2))
c3=c()
for (pcut in pval_cutoff){
a=df_clean[df_clean$pval_ppmi<pcut,]#when p sig
a$sign_match <- sign(a$beta_ppmi) == sign(a$beta_pdbp)
b=table(a$sign_match)
c4=b[2]/(b[1]+b[2])
c3=c(c3,c4)
#print(paste('When p sig, beta with same sign:',c3))
}
result_df=rbind(result_df,c(c1,c2,c3))
}
result_df=as.data.frame(result_df)
rownames(result_df)=c("updrs1","updrs2","updrs4","schwab","ess",'moca','updrs3')
colnames(result_df)=c('pearson','spearman','p0.005','p0.05','p0.01','p0.1')
result_df
############# PDBP #############
pval_pdbp=read.csv('~/Desktop/manuscript related/PDBP_validation/snp/lmm_result_earlyPD_u3off/PD_combined/linear_pval_mt_combined_all.csv',row.names = 1)
beta_pdbp=read.csv('~/Desktop/manuscript related/PDBP_validation/snp/lmm_result_earlyPD_u3off/PD_combined/linear_beta_mt_combined_all.csv',row.names = 1)
############# compare #############
common_SNPs_pval=intersect(rownames(pval_ppmi),rownames(pval_pdbp))
common_SNPs_beta=intersect(rownames(beta_ppmi),rownames(beta_pdbp))
pval_pdbp=pval_pdbp[common_SNPs_pval,]
pval_ppmi=pval_ppmi[common_SNPs_pval,]
beta_ppmi=beta_ppmi[common_SNPs_beta,]
beta_pdbp=beta_pdbp[common_SNPs_beta,]
############# calculate correlation, proportion... #############
t='moca'
result_df=c()
pval_cutoff=c(0.005,0.05,0.01,0.1)
for (t in c("updrs1","updrs2",'updrs3',"updrs4","schwab","ess",'moca')){
#print(t)
df=cbind(pval_pdbp[,t],pval_ppmi[,t],beta_ppmi[,t],beta_pdbp[,t])
colnames(df)=c('pval_pdbp','pval_ppmi','beta_ppmi','beta_pdbp')
df=as.data.frame(df)
rownames(df)=rownames(pval_pdbp)
df_clean <- df[!is.na(df$beta_ppmi) & !is.na(df$beta_pdbp), ]
c1=cor(df$beta_ppmi, df$beta_pdbp, use = "complete.obs", method = "pearson")
c2=cor(df_clean$beta_ppmi, df_clean$beta_pdbp, method = "spearman")
#print(paste('Corr Pearson beta:',c1))
#print(paste('Corr spearman beta:',c2))
c3=c()
for (pcut in pval_cutoff){
a=df_clean[df_clean$pval_ppmi<pcut,]#when p sig
a$sign_match <- sign(a$beta_ppmi) == sign(a$beta_pdbp)
b=table(a$sign_match)
c4=b[2]/(b[1]+b[2])
c3=c(c3,c4)
#print(paste('When p sig, beta with same sign:',c3))
}
result_df=rbind(result_df,c(c1,c2,c3))
}
result_df=as.data.frame(result_df)
rownames(result_df)=c("updrs1","updrs2","updrs4","schwab","ess",'moca','updrs3')
colnames(result_df)=c('pearson','spearman','p0.005','p0.05','p0.01','p0.1')
result_df
############# PDBP #############
pval_pdbp=read.csv('~/Desktop/manuscript related/PDBP_validation/snp/lmm_result_allPD_u3off/PD_combined/linear_pval_mt_combined_all.csv',row.names = 1)
beta_pdbp=read.csv('~/Desktop/manuscript related/PDBP_validation/snp/lmm_result_allPD_u3off/PD_combined/linear_beta_mt_combined_all.csv',row.names = 1)
############# compare #############
common_SNPs_pval=intersect(rownames(pval_ppmi),rownames(pval_pdbp))
common_SNPs_beta=intersect(rownames(beta_ppmi),rownames(beta_pdbp))
pval_pdbp=pval_pdbp[common_SNPs_pval,]
pval_ppmi=pval_ppmi[common_SNPs_pval,]
beta_ppmi=beta_ppmi[common_SNPs_beta,]
beta_pdbp=beta_pdbp[common_SNPs_beta,]
############# calculate correlation, proportion... #############
t='moca'
result_df=c()
pval_cutoff=c(0.005,0.05,0.01,0.1)
for (t in c("updrs1","updrs2",'updrs3',"updrs4","schwab","ess",'moca')){
#print(t)
df=cbind(pval_pdbp[,t],pval_ppmi[,t],beta_ppmi[,t],beta_pdbp[,t])
colnames(df)=c('pval_pdbp','pval_ppmi','beta_ppmi','beta_pdbp')
df=as.data.frame(df)
rownames(df)=rownames(pval_pdbp)
df_clean <- df[!is.na(df$beta_ppmi) & !is.na(df$beta_pdbp), ]
c1=cor(df$beta_ppmi, df$beta_pdbp, use = "complete.obs", method = "pearson")
c2=cor(df_clean$beta_ppmi, df_clean$beta_pdbp, method = "spearman")
#print(paste('Corr Pearson beta:',c1))
#print(paste('Corr spearman beta:',c2))
c3=c()
for (pcut in pval_cutoff){
a=df_clean[df_clean$pval_ppmi<pcut,]#when p sig
a$sign_match <- sign(a$beta_ppmi) == sign(a$beta_pdbp)
b=table(a$sign_match)
c4=b[2]/(b[1]+b[2])
c3=c(c3,c4)
#print(paste('When p sig, beta with same sign:',c3))
}
result_df=rbind(result_df,c(c1,c2,c3))
}
result_df=as.data.frame(result_df)
rownames(result_df)=c("updrs1","updrs2","updrs4","schwab","ess",'moca','updrs3')
colnames(result_df)=c('pearson','spearman','p0.005','p0.05','p0.01','p0.1')
result_df
############## save result_df into excel files. plot a heatmap ########
result_df=read.csv("~/Desktop/manuscript related/PDBP_validation/snp/heatmap.csv")
head("~/Desktop/manuscript related/PDBP_validation/snp/heatmap.csv")
head(result_df)
?read.csv
############## save result_df into excel files. plot a heatmap ########
result_df=read.csv("~/Desktop/manuscript related/PDBP_validation/snp/heatmap.csv",row.names = 1)
heatmap(as.matrix(result_df))
result_df
############## save result_df into excel files. plot a heatmap ########
result_df=read.csv("~/Desktop/manuscript related/PDBP_validation/snp/heatmap.csv",row.names = 1)
heatmap(as.matrix(result_df))
heatmap(as.matrix(result_df), Colv = NA, Rowv = NA)
result_df
result_df=result_df[,c('updrs2','updrs3','schwab','moca','ess')]
result_df=result_df[c('updrs2','updrs3','schwab','moca','ess'),]
heatmap(as.matrix(result_df), Colv = NA, Rowv = NA)
plot_df=melt(result_df)
plot_df=reshape2::melt(result_df)
head(plot_df)
plot_df
result_df
############## save result_df into excel files. plot a heatmap ########
result_df=read.csv("~/Desktop/manuscript related/PDBP_validation/snp/heatmap.csv")
############## save result_df into excel files. plot a heatmap ########
result_df=read.csv("~/Desktop/manuscript related/PDBP_validation/snp/heatmap.csv",row.names = 1)
result_df=result_df[c('updrs2','updrs3','schwab','moca','ess'),]
result_df$trait <- rownames(result_df)
plot_df=reshape2::melt(result_df, id.vars = "trait")
head(plot_df)
ggplot(data, aes(variable, trait, fill= value)) +
geom_tile()
ggplot(plot_df, aes(variable, trait, fill= value)) +
geom_tile()
ggplot(plot_df, aes(variable, trait, fill= value)) +
geom_tile()+theme_bw()
ggplot(plot_df, aes(variable, trait, fill= value)) +
geom_tile()+theme_minimal()
ggplot(plot_df, aes(variable, trait, fill= value)) +
geom_tile()+theme_minimal()+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
ggplot(plot_df, aes(variable, trait, fill= value)) +
geom_tile()+theme_minimal()+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1),
axis.text = element_text(size = 18))
ggplot(plot_df, aes(variable, trait, fill= value)) +
geom_tile()+theme_minimal()+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1),
axis.text = element_text(size = 14))
ggplot(plot_df, aes(variable, trait, fill= value)) +
geom_tile()+theme_minimal()+
labs(x = "Cohort", y = "Trait", fill = "Beta Sign Concordance") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1),
axis.text = element_text(size = 14))
ggsave('~/Desktop/manuscript related/PDBP_validation/snp/heatmap.png',p,height = 10,width=10)
p=ggplot(plot_df, aes(variable, trait, fill= value)) +
geom_tile()+theme_minimal()+
labs(x = "Cohort", y = "Trait", fill = "Beta Sign Concordance") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1),
axis.text = element_text(size = 14))
ggsave('~/Desktop/manuscript related/PDBP_validation/snp/heatmap.png',p,height = 10,width=10)
ggsave('~/Desktop/manuscript related/PDBP_validation/snp/heatmap.png',p,height = 5,width=10)
ggsave('~/Desktop/manuscript related/PDBP_validation/snp/heatmap.png',p,height = 5,width=5)
############## plot beta and pval ##############
#t='moca'
p_cut=0.05
df=df
df$sig <- with(df, ifelse(pval_ppmi < p_cut & pval_pdbp < p_cut, "both",
ifelse(pval_ppmi < p_cut & pval_pdbp >= p_cut, "ppmi",
ifelse(pval_pdbp < p_cut & pval_ppmi >= p_cut, "pdbp", "nosig"))))
df$color_label <- factor(df$sig, levels = c("nosig", "ppmi", "pdbp", "both"))
df$color_direction = ifelse(df$beta_pdbp*df$beta_ppmi > 0,'same','different')
p=ggplot(df[df$pval_ppmi<p_cut,],aes(x=-log(pval_ppmi), y=-log(pval_pdbp), color=color_direction))+
geom_point()+
geom_abline(slope=0,intercept=-log(p_cut),color='blue') +
scale_color_manual(
values = c("different" = "lightgrey", "same" = "red"),
labels = c("different" = "diff beta sign", "same" = "same beta sign")
)
p1=ggMarginal(p, type="histogram",groupColour = TRUE, groupFill = TRUE)
p1
beta_p=ggplot(df,aes(x=beta_ppmi, y=beta_pdbp, color=color_label))+
geom_point(alpha=0.5)+
#xlim(-0.25,0.25) + ylim(-0.25,0.25) +
geom_abline(slope = 1, intercept = 0, linetype = "dashed", color = "blue") +
theme_bw()+
scale_color_manual(
values = c("nosig" = "lightgrey", "ppmi" = "orange", "pdbp" = "pink", "both" = "red"),
labels = c("nosig" = "No Significance", "ppmi" = "PPMI Only", "pdbp" = "PDBP Only", "both" = "Both")
)
p2=ggMarginal(beta_p, type="histogram",groupColour = TRUE, groupFill = TRUE)
p2
head(df)
beta_p=ggplot(df[df$color_label %in% c('PPMI Only','PDBP Only','Both')],
aes(x=beta_ppmi, y=beta_pdbp, color=color_label))+
geom_point(alpha=0.5)+
#xlim(-0.25,0.25) + ylim(-0.25,0.25) +
geom_abline(slope = 1, intercept = 0, linetype = "dashed", color = "blue") +
theme_bw()+
scale_color_manual(
values = c("nosig" = "lightgrey", "ppmi" = "orange", "pdbp" = "pink", "both" = "red"),
labels = c("nosig" = "No Significance", "ppmi" = "PPMI Only", "pdbp" = "PDBP Only", "both" = "Both")
)
p2=ggMarginal(beta_p, type="histogram",groupColour = TRUE, groupFill = TRUE)
p2
beta_p=ggplot(df[df$color_label %in% c('PPMI Only','PDBP Only','Both'),],
aes(x=beta_ppmi, y=beta_pdbp, color=color_label))+
geom_point(alpha=0.5)+
#xlim(-0.25,0.25) + ylim(-0.25,0.25) +
geom_abline(slope = 1, intercept = 0, linetype = "dashed", color = "blue") +
theme_bw()+
scale_color_manual(
values = c("nosig" = "lightgrey", "ppmi" = "orange", "pdbp" = "pink", "both" = "red"),
labels = c("nosig" = "No Significance", "ppmi" = "PPMI Only", "pdbp" = "PDBP Only", "both" = "Both")
)
p2=ggMarginal(beta_p, type="histogram",groupColour = TRUE, groupFill = TRUE)
df[df$color_label %in% c('PPMI Only','PDBP Only','Both'),]
unique(df$color_label)
beta_p=ggplot(df[df$color_label %in% c('pdbp','ppmi','both'),],
aes(x=beta_ppmi, y=beta_pdbp, color=color_label))+
geom_point(alpha=0.5)+
#xlim(-0.25,0.25) + ylim(-0.25,0.25) +
geom_abline(slope = 1, intercept = 0, linetype = "dashed", color = "blue") +
theme_bw()+
scale_color_manual(
values = c("nosig" = "lightgrey", "ppmi" = "orange", "pdbp" = "pink", "both" = "red"),
labels = c("nosig" = "No Significance", "ppmi" = "PPMI Only", "pdbp" = "PDBP Only", "both" = "Both")
)
p2=ggMarginal(beta_p, type="histogram",groupColour = TRUE, groupFill = TRUE)
p2
head(df)
unique(df$sig)
# only plot snps sig in PPMI, see how many of them have the same beta sign
beta_p=ggplot(df[df$pval_ppmi<p_cut,],
aes(x=beta_ppmi, y=beta_pdbp, color=color_label))+
geom_point(alpha=0.5)+
#xlim(-0.25,0.25) + ylim(-0.25,0.25) +
geom_abline(slope = 1, intercept = 0, linetype = "dashed", color = "blue") +
theme_bw()+
scale_color_manual(
values = c("nosig" = "lightgrey", "ppmi" = "orange", "pdbp" = "pink", "both" = "red"),
labels = c("nosig" = "No Significance", "ppmi" = "PPMI Only", "pdbp" = "PDBP Only", "both" = "Both")
)
p2=ggMarginal(beta_p, type="histogram",groupColour = TRUE, groupFill = TRUE)
p2
head(df)
# only plot snps sig in PPMI, see how many of them have the same beta sign
df3=na.omit(df[df$pval_ppmi<p_cut,])
beta_p=ggplot(df3,
aes(x=beta_ppmi, y=beta_pdbp, color=color_label))+
geom_point(alpha=0.5)+
#xlim(-0.25,0.25) + ylim(-0.25,0.25) +
geom_abline(slope = 1, intercept = 0, linetype = "dashed", color = "blue") +
theme_bw()+
scale_color_manual(
values = c("nosig" = "lightgrey", "ppmi" = "orange", "pdbp" = "pink", "both" = "red"),
labels = c("nosig" = "No Significance", "ppmi" = "PPMI Only", "pdbp" = "PDBP Only", "both" = "Both")
)
p3=ggMarginal(beta_p, type="histogram",groupColour = TRUE, groupFill = TRUE)
p3
head(df3)
unique(df3$color_direction)
# only plot snps sig in PPMI, see how many of them have the same beta sign
df3=na.omit(df[df$pval_ppmi<p_cut,])
beta_p=ggplot(df3,
aes(x=beta_ppmi, y=beta_pdbp, color=color_direction))+
geom_point(alpha=0.5)+
#xlim(-0.25,0.25) + ylim(-0.25,0.25) +
geom_abline(slope = 1, intercept = 0, linetype = "dashed", color = "blue") +
theme_bw()+
scale_color_manual(
values = c("different" = "lightgrey", "same" = "red"),
labels = c("different" = "different", "same" = "same")
)
p3=ggMarginal(beta_p, type="histogram",groupColour = TRUE, groupFill = TRUE)
p3
############# PDBP #############
pval_pdbp=read.csv('~/Desktop/manuscript related/PDBP_validation/snp/lmm_result_earlyPD_u3off/PD_combined/linear_pval_mt_combined_all.csv',row.names = 1)
beta_pdbp=read.csv('~/Desktop/manuscript related/PDBP_validation/snp/lmm_result_earlyPD_u3off/PD_combined/linear_beta_mt_combined_all.csv',row.names = 1)
version='earlyPD_u3off'
############# compare #############
common_SNPs_pval=intersect(rownames(pval_ppmi),rownames(pval_pdbp))
common_SNPs_beta=intersect(rownames(beta_ppmi),rownames(beta_pdbp))
pval_pdbp=pval_pdbp[common_SNPs_pval,]
pval_ppmi=pval_ppmi[common_SNPs_pval,]
beta_ppmi=beta_ppmi[common_SNPs_beta,]
beta_pdbp=beta_pdbp[common_SNPs_beta,]
############# calculate correlation, proportion... #############
t='moca'
############# calculate correlation, proportion... #############
t='moca'
result_df=c()
pval_cutoff=c(0.005,0.05,0.01,0.1)
for (t in c("updrs1","updrs2",'updrs3',"updrs4","schwab","ess",'moca')){
#print(t)
df=cbind(pval_pdbp[,t],pval_ppmi[,t],beta_ppmi[,t],beta_pdbp[,t])
colnames(df)=c('pval_pdbp','pval_ppmi','beta_ppmi','beta_pdbp')
df=as.data.frame(df)
rownames(df)=rownames(pval_pdbp)
df_clean <- df[!is.na(df$beta_ppmi) & !is.na(df$beta_pdbp), ]
c1=cor(df$beta_ppmi, df$beta_pdbp, use = "complete.obs", method = "pearson")
c2=cor(df_clean$beta_ppmi, df_clean$beta_pdbp, method = "spearman")
#print(paste('Corr Pearson beta:',c1))
#print(paste('Corr spearman beta:',c2))
c3=c()
for (pcut in pval_cutoff){
a=df_clean[df_clean$pval_ppmi<pcut,]#when p sig
a$sign_match <- sign(a$beta_ppmi) == sign(a$beta_pdbp)
b=table(a$sign_match)
c4=b[2]/(b[1]+b[2])
c3=c(c3,c4)
#print(paste('When p sig, beta with same sign:',c3))
}
result_df=rbind(result_df,c(c1,c2,c3))
}
result_df=as.data.frame(result_df)
rownames(result_df)=c("updrs1","updrs2","updrs4","schwab","ess",'moca','updrs3')
colnames(result_df)=c('pearson','spearman','p0.005','p0.05','p0.01','p0.1')
result_df
############## plot beta and pval ##############
#t='moca'
p_cut=0.05
df=df
df$sig <- with(df, ifelse(pval_ppmi < p_cut & pval_pdbp < p_cut, "both",
ifelse(pval_ppmi < p_cut & pval_pdbp >= p_cut, "ppmi",
ifelse(pval_pdbp < p_cut & pval_ppmi >= p_cut, "pdbp", "nosig"))))
df$color_label <- factor(df$sig, levels = c("nosig", "ppmi", "pdbp", "both"))
df$color_direction = ifelse(df$beta_pdbp*df$beta_ppmi > 0,'same','different')
p=ggplot(df[df$pval_ppmi<p_cut,],aes(x=-log(pval_ppmi), y=-log(pval_pdbp), color=color_direction))+
geom_point()+
geom_abline(slope=0,intercept=-log(p_cut),color='blue') +
scale_color_manual(
values = c("different" = "lightgrey", "same" = "red"),
labels = c("different" = "diff beta sign", "same" = "same beta sign")
)
p1=ggMarginal(p, type="histogram",groupColour = TRUE, groupFill = TRUE)
p1
beta_p=ggplot(df[df$color_label %in% c('pdbp','ppmi','both'),],
aes(x=beta_ppmi, y=beta_pdbp, color=color_label))+
geom_point(alpha=0.5)+
#xlim(-0.25,0.25) + ylim(-0.25,0.25) +
geom_abline(slope = 1, intercept = 0, linetype = "dashed", color = "blue") +
theme_bw()+
scale_color_manual(
values = c("nosig" = "lightgrey", "ppmi" = "orange", "pdbp" = "pink", "both" = "red"),
labels = c("nosig" = "No Significance", "ppmi" = "PPMI Only", "pdbp" = "PDBP Only", "both" = "Both")
)
p2=ggMarginal(beta_p, type="histogram",groupColour = TRUE, groupFill = TRUE)
p2
# only plot snps sig in PPMI, see how many of them have the same beta sign
df3=na.omit(df[df$pval_ppmi<p_cut,])
beta_p=ggplot(df3,
aes(x=beta_ppmi, y=beta_pdbp, color=color_direction))+
geom_point(alpha=0.5)+
#xlim(-0.25,0.25) + ylim(-0.25,0.25) +
geom_abline(slope = 1, intercept = 0, linetype = "dashed", color = "blue") +
theme_bw()+
scale_color_manual(
values = c("different" = "lightgrey", "same" = "red"),
labels = c("different" = "different", "same" = "same")
)
p3=ggMarginal(beta_p, type="histogram",groupColour = TRUE, groupFill = TRUE)
p3
head(df)
############# PDBP #############
pdbp_version='earlyPD_u3off'
pval_pdbp=read.csv(paste0('~/Desktop/manuscript related/PDBP_validation/snp/lmm_result_',pdbp_version,'/PD_combined/linear_pval_mt_combined_all.csv'),row.names = 1)
beta_pdbp=read.csv(paste0('~/Desktop/manuscript related/PDBP_validation/snp/lmm_result_',pdbp_version,'/PD_combined/linear_beta_mt_combined_all.csv'),row.names = 1)
############# PDBP #############
pdbp_version='earlyPD_u3off'
pval_pdbp=read.csv(paste0('~/Desktop/manuscript related/PDBP_validation/snp/lmm_result_',pdbp_version,'/PD_combined/linear_pval_mt_combined_all.csv'),row.names = 1)
beta_pdbp=read.csv(paste0('~/Desktop/manuscript related/PDBP_validation/snp/lmm_result_',pdbp_version,'/PD_combined/linear_beta_mt_combined_all.csv'),row.names = 1)
############# compare #############
common_SNPs_pval=intersect(rownames(pval_ppmi),rownames(pval_pdbp))
common_SNPs_beta=intersect(rownames(beta_ppmi),rownames(beta_pdbp))
pval_pdbp=pval_pdbp[common_SNPs_pval,]
pval_ppmi=pval_ppmi[common_SNPs_pval,]
beta_ppmi=beta_ppmi[common_SNPs_beta,]
beta_pdbp=beta_pdbp[common_SNPs_beta,]
head(pval_pdbp)
head(df)
############## plot beta and pval ##############
p_cut=0.05
for (t in c('updrs1','updrs4',"updrs2",'updrs3',"schwab","ess",'moca')){
df=cbind(pval_pdbp[,t],pval_ppmi[,t],beta_ppmi[,t],beta_pdbp[,t])
colnames(df)=c('pval_pdbp','pval_ppmi','beta_ppmi','beta_pdbp')
df=as.data.frame(df)
rownames(df)=rownames(pval_pdbp)
df_clean <- df[!is.na(df$beta_ppmi) & !is.na(df$beta_pdbp), ]
df=df_clean
df$sig <- with(df, ifelse(pval_ppmi < p_cut & pval_pdbp < p_cut, "both",
ifelse(pval_ppmi < p_cut & pval_pdbp >= p_cut, "ppmi",
ifelse(pval_pdbp < p_cut & pval_ppmi >= p_cut, "pdbp", "nosig"))))
df$color_label <- factor(df$sig, levels = c("nosig", "ppmi", "pdbp", "both"))
df$color_direction = ifelse(df$beta_pdbp*df$beta_ppmi > 0,'same','different')
# only plot snps sig in PPMI, see how many of them have the same beta sign
df3=na.omit(df[df$pval_ppmi<p_cut,])
beta_p=ggplot(df3,
aes(x=beta_ppmi, y=beta_pdbp, color=color_direction))+
geom_point(alpha=0.5)+
#xlim(-0.25,0.25) + ylim(-0.25,0.25) +
geom_abline(slope = 1, intercept = 0, linetype = "dashed", color = "blue") +
theme_bw()+
scale_color_manual(
values = c("different" = "lightgrey", "same" = "red"),
labels = c("different" = "different", "same" = "same")
)
p3=ggMarginal(beta_p, type="histogram",groupColour = TRUE, groupFill = TRUE)
#p3
ggsave(paste0('~/Desktop/manuscript related/PDBP_validation/snp/plot/dot_',t,'.png'),
p3,height = 5,width=5)
}
for (t in c('updrs1','updrs4',"updrs2",'updrs3',"schwab","ess",'moca')){
df=cbind(pval_pdbp[,t],pval_ppmi[,t],beta_ppmi[,t],beta_pdbp[,t])
colnames(df)=c('pval_pdbp','pval_ppmi','beta_ppmi','beta_pdbp')
df=as.data.frame(df)
rownames(df)=rownames(pval_pdbp)
df_clean <- df[!is.na(df$beta_ppmi) & !is.na(df$beta_pdbp), ]
df=df_clean
df$sig <- with(df, ifelse(pval_ppmi < p_cut & pval_pdbp < p_cut, "both",
ifelse(pval_ppmi < p_cut & pval_pdbp >= p_cut, "ppmi",
ifelse(pval_pdbp < p_cut & pval_ppmi >= p_cut, "pdbp", "nosig"))))
df$color_label <- factor(df$sig, levels = c("nosig", "ppmi", "pdbp", "both"))
df$color_direction = ifelse(df$beta_pdbp*df$beta_ppmi > 0,'same','different')
# only plot snps sig in PPMI, see how many of them have the same beta sign
df3=na.omit(df[df$pval_ppmi<p_cut,])
beta_p=ggplot(df3,
aes(x=beta_ppmi, y=beta_pdbp, color=color_direction))+
geom_point(alpha=0.5)+
#xlim(-0.25,0.25) + ylim(-0.25,0.25) +
geom_abline(slope = 1, intercept = 0, linetype = "dashed", color = "blue") +
ggtitle(t)+
theme_bw()+
scale_color_manual(
values = c("different" = "lightgrey", "same" = "red"),
labels = c("different" = "different", "same" = "same")
)
p3=ggMarginal(beta_p, type="histogram",groupColour = TRUE, groupFill = TRUE)
#p3
ggsave(paste0('~/Desktop/manuscript related/PDBP_validation/snp/plot/dot_',t,'.png'),
p3,height = 3,width=5)
}
